# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
commands:
  print-pipeline-id:
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}
jobs:
  save-hello-world:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: echo "Hello World" > output.txt
      - persist_to_workspace:
          root: .     # relative path to our working directory
          paths:      # file globs which will be persisted to the workspace
           - output.txt
  print-hello-world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - attach_workspace:
          at: . # relative path to our working directory
      - run:
          name: "Say World"
          command: cat output.txt
  print-pipeline:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print-pipeline-id
  test-error:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: exit 1
      - run:
          name: error
          command: echo 'There's an error '
          when: on_fail
     

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - save-hello-world
      - print-pipeline
      - print-hello-world:
          requires:
            - save-hello-world

